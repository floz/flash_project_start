package com.makemepulse.ui.form{	import aze.motion.eaze;	import com.makemepulse.ui.form.validator.IValidator;	import flash.events.EventDispatcher;	import flash.text.TextField;           /**     * @author Nicolas Rajabaly - nicolas@makemepulse.com     */    public class FormElement extends EventDispatcher implements IFormElement {    	    	private var _validators:Array;    	private var _value:*;    	private var _required:Boolean;    	protected var _defaultValue:FormDefaultValue;    	protected var _label:TextField;    	//		protected var _error_color:int=0xFF0000;    	protected var _default_color:int=0x000000;    	    	private var _id:String;    	    	public function FormElement(id:String,validators:Array,required:Boolean,label:TextField,defaultValue:FormDefaultValue){    		_id=id;    		_validators=validators;    		_defaultValue=defaultValue;    		_value=_defaultValue.value;    		_label=label;    		_required=required;    	}    	    	public function setValue(o:*=null,notify:Boolean=true):void{    		_value=o;    		if(notify) dispatchEvent(new FormElementEvent(FormElementEvent.VALUE_CHANGE ) );    		        }    	    	    	public function getValue():*{    		return _value;    	}    	        public function isValid () : Boolean {        	if(_defaultValue.isValid()) {        		if(_value==_defaultValue.value) return true;        	}        	for (var i : int = 0; i < _validators.length; i++) {				var v : IValidator=_validators[i] as IValidator;				if(v.isValid(_value)==false) return false;            }            return true;        }                public function set required (value : Boolean) : void {            _required = value;        }                public function get required () : Boolean {            return _required;        }                public function get validators () : Array {            return _validators;        }                public function set validators (validators : Array) : void {            _validators = validators;        }                public function reset () : void {        	_value=_defaultValue.value;        }                public function dispose () : void {        	//to override        }                public function set default_color (value : int) : void {            _default_color = value;        }                public function set error_color (value : int) : void {            _error_color = value;        }                public function showError () : void {        	if(_label==null) return;        	//Tweener.addTween(_label,{_color:_default_color,time:.3,transition:Equations.easeOutQuad});        	eaze( _label ).to( .3 ).tint( _default_color );        	if(isValid()) return;        	setToError();        }		                public function setToError():void{        	//Tweener.addTween(_label,{_color:_error_color,time:.3,transition:Equations.easeOutQuad});        	eaze( _label ).to( .3 ).tint( _error_color );        }                public function hideError():void{        	if(_label==null) return;        	//Tweener.addTween(_label,{_color:_default_color,time:.3,transition:Equations.easeOutQuad});        	eaze( _label ).to( .3 ).tint( _default_color );        }                public function get id () : String {            return _id;        }    }}