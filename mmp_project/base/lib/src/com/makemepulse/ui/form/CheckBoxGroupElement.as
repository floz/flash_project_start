package com.makemepulse.ui.form{	import aze.motion.eaze;	import flash.text.TextField;	import flash.utils.Dictionary;    /**     * @author Nicolas Rajabaly - nicolas@makemepulse.com     */    public class CheckBoxGroupElement extends FormElement {                                private var _elts : Vector.<CheckBoxElement>;        private var _idelts : Dictionary;                public function CheckBoxGroupElement(id:String,required:Boolean=false,label:TextField=null){        	super(id,[],required,label,new FormDefaultValue(null,false));    		_idelts=new Dictionary();    		_elts = new Vector.<CheckBoxElement>();    	}    	    	override public function isValid () : Boolean {    		if(getValue()==null) return false;    		return true;    	}    	    	private function _handlerChangeEltValue (event : FormElementEvent) : void {    		var element:CheckBoxElement=event.target as CheckBoxElement;    		if(element.getValue()==true){	    		for (var i : int = 0; i < _elts.length; i++) {	        		var elt : CheckBoxElement=_elts[i];	        		if(elt!=element){	        			elt.setValue(false,false);	        		}	        		setValue(element.id);	    		}	    		hideError();    		}else{    			setValue(null);    			showError();	        	}    	}    	    	    	override public function reset () : void {        	super.reset();        }                override public function dispose () : void {			for (var i : int = 0; i < _elts.length; i++) {        		var elt : CheckBoxElement=_elts[i];        		elt.removeEventListener( FormElementEvent .VALUE_CHANGE , _handlerChangeEltValue);        		elt.dispose();        	}        }    	    	override public function showError () : void {        	if(isValid()) return;        	for (var i : int = 0; i < _elts.length; i++) {        		var elt : IFormElement=_elts[i];        		elt.showError();        	}        	if(_label==null) return;        	//Tweener.addTween(_label,{_color:_error_color,time:.3,transition:Equations.easeOutQuad});        	eaze( _label ).to( .3 ).tint( _error_color );        }                override public function hideError():void{        	for (var i : int = 0; i < _elts.length; i++) {        		var elt : IFormElement=_elts[i];        		elt.hideError();        	}        	if(_label==null) return;        	//Tweener.addTween(_label,{_color:_default_color,time:.3,transition:Equations.easeOutQuad});        	eaze( _label ).to( .3 ).tint( _default_color );        }    	    	    	    	    	    	 public function push (element : CheckBoxElement):void{        	if( isIn(element) ) return;        	_elts.push(element);        	element.addEventListener( FormElementEvent .VALUE_CHANGE , _handlerChangeEltValue);        	_idelts[element.id]=true;        }                public function isIn(element : CheckBoxElement):Boolean{        	if (_idelts[element.id]==true) {        		return true;        	}        	return false;        }        public function remove (element : CheckBoxElement):void{			for (var i : int = 0; i < _elts.length; i++) {        		var elt : IFormElement=_elts[i];        		if(elt==element) {        			_elts.splice(i,1);        			element.removeEventListener( FormElementEvent .VALUE_CHANGE , _handlerChangeEltValue);        			_idelts[element.id]=null;        			return;            	}            }        }                    }}